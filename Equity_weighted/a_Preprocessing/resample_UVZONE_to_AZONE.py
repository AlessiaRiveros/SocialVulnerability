import geopandas as gpd
import os
import matplotlib.pyplot as plt
from mpl_toolkits.axes_grid1 import make_axes_locatable

pdir = r'p:\11209200-020-sociale-kwetsbaarheid\Data'
uvzone = gpd.read_file(os.path.join(pdir, 'Population', 'UVZONE.shp'))
azone = gpd.read_file(os.path.join(pdir, 'Income', 'AZONE.shp'))

# drop unused columns from uvzone
uvzone = uvzone.drop(columns=['MUNICIPIO', 'DISTRITO', 'ETUV', 'AREA', 'POP12', 'POP20', 'POP25', 'POP30', 'POP35', 'EMP', 'Population'])
# rename ids
uvzone = uvzone.rename(columns={"ID": "IDuvzone"})
azone = azone.rename(columns={"ID": "IDazone"})

# get crs
uv_crs = uvzone.crs
a_crs = azone.crs

fig, ax = plt.subplots(1, 3, figsize=(12, 4))

ax0_divider = make_axes_locatable(ax[0])
ax1_divider = make_axes_locatable(ax[1])
ax2_divider = make_axes_locatable(ax[2])

cax0 = ax0_divider.append_axes("right", size="5%", pad="1%")
cax1 = ax1_divider.append_axes("right", size="5%", pad="1%")
cax2 = ax2_divider.append_axes("right", size="5%", pad="1%")

uvzone.plot(column='POP16', ax=ax[0], cax=cax0, cmap='OrRd', legend=True, legend_kwds={"label": "Population"})
uvzone["geometry"].centroid.plot(ax=ax[0], color="green", markersize=4)
uvzone.boundary.plot(ax=ax[0], lw=0.5, color='grey')
ax[0].title.set_text('UVZONE Population in 2016')

# get centroid before reprojection, and why not after? does it matter?
uvzone['centroid'] = uvzone["geometry"].centroid
uvzone.set_geometry('centroid', drop=True, inplace=True)
# reproject crs
crs = 'EPSG:4326'
uvzone = uvzone.to_crs(crs)

# spatial join
gdf = gpd.sjoin(azone, uvzone, how='inner', predicate='intersects')

gdf.plot(column='POP16', ax=ax[1], cax=cax1, cmap='OrRd', legend=True, legend_kwds={"label": "Population"})
gdf.boundary.plot(ax=ax[1], lw=0.5, color='grey')
ax[1].title.set_text('MERGING Population in 2016')

df = gdf.groupby('IDazone')['POP16'].sum()
azone['POP16'] = df

azone.plot(column='POP16', ax=ax[2], cax=cax2, cmap='OrRd', legend=True, legend_kwds={"label": "Population"})
azone.boundary.plot(ax=ax[2], lw=0.5, color='grey')
ax[2].title.set_text('AZONE Population in 2016')

ax[0].set_axis_off()
ax[1].set_axis_off()
ax[2].set_axis_off()

print(df)
print(df.sum())
df.to_csv(os.path.join(pdir, 'Income', 'AZONE_Pop16.csv'))

plt.tight_layout()
plt.savefig(os.path.join(pdir, '..', 'Figures', 'Exposure', 'Population_2016.png'))
plt.show()