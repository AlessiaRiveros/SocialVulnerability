import pandas as pd
import os
import seaborn as sns
import matplotlib.pyplot as plt

pdir = r'p:\11209200-020-sociale-kwetsbaarheid'

pd.set_option('display.max_columns', None)
f2 = 0.016
f10 = 0.039

df = pd.read_spss(os.path.join(pdir, 'Data', 'INE', 'Bases_EPF_2015-2016', 'EPF1516_Persona Ingreso.sav'))
df_home = pd.read_csv(os.path.join(pdir, 'Data', 'INE', 'processed', 'EPF1516_Vivienda_processed.csv'))

# filter to area of interest dept = Santa Cruz and urban
df = df.loc[(df['area'] == 'Urbana') & (df['dept'] == '07 Santa Cruz')]

# seccion4: ingresos laborales
# seccion5: ingresos no laborales

variable = {
    's4_17a': 'Liquid Salary (Amount)',
    's4_17b': 'Liquid Salary (Frequency)',
    's4_18a': 'Bonus (Amount) Received',
    's4_18b': 'Christmas Bonus (Amount)',
    's4_22a1': 'Total Income in Primary Occupation (Amount)',
    's4_22a2': 'Total Income in Primary Occupation (Frequency)',
    'ysal1net': 'Salary',
    'ysal1ben_1': 'Bonus',
    'ysal1ben_2': 'Christmas bonus',
    'ysal1ben': 'Total benefits from salaried employment - 1st employment',
    'ysal2ben': 'Total benefits from salaried employment - 2nd employment',
    'ym_especie': 'Total labor income',
    'y_monetario': 'Total labor and non-labor income', # income ih
    'ym_transferencia_gob': 'Total transfers from Gov',
    'ym_transferencia_hog': 'Transferencias entre hogares por remesas o internas',
    'ym_transferencia_tot': 'Total transfers from gov, soc security or from other hh'
}

# fig, ax = plt.subplots(1, 1)
# sns.catplot(data=df, x='ysal1ben', y='s2_02', kind='box')
# sns.stripplot(data=df, x='ysal1ben', y='s2_02')
# sns.catplot(data=df, x='y_monetario', y='s2_02', kind='box')
# plt.show()

# Csp gov spending on social protection
# transfers received from friends and family added to social transfers
df['isp'] = df['ym_transferencia_gob'] + df['ym_transferencia_hog'] + df['ym_transferencia_ss']
Csp = df['isp'].sum()

# flat income tax that finances social programs
tax = Csp / df['y_monetario'].sum()

# productivity = cgdpo / cn
prod = 83541 / 170129

# effective capital stock
df['keff'] = (df['y_monetario'] - df['ym_especie']) / (1-tax) / prod

# merge on folio dwelling table with income to include vulnerability
df.merge(df_home, how='left', on='folio')

# change in keff
df['dkeff'] = df['keff'] * df['v']

# total exposed assets K
K = (df['dkeff']).sum()

# total asset losses L
L10 = K * f10
L2 = K * f2

# change in social transfers
df['disp10'] = L10/K * df['isp']
df['disp2'] = L2/K * df['isp']

# income losses should be for each household?
df['dih10'] = (1-tax) * prod * df['dkeff'] + df['disp10']
df['dih2'] = (1-tax) * prod * df['dkeff'] + df['disp2']
