import numpy as np


def optimize_reco(row, verbose=False):
    pi = 83541 / 170129
    rho = 12.67 / 100
    eta = 1.5

    v = row['v']
    if v == 0:
        return 0

    last_integ = None
    last_lambda = None

    _l = 0.0
    while True:

        if pi - (pi + _l) * v < 0:
            assert (False)

        x_max = 15
        dt_step = 52 * x_max

        integ = 0
        for _t in np.linspace(0, x_max, dt_step):
            integ += np.e ** (-_t * (rho + _l)) * ((pi + _l) * _t - 1) * (pi - (pi + _l) * v * np.e ** (-_l * _t)) ** (
                -eta)

        if last_integ and ((last_integ < 0 < integ) or (last_integ > 0 > integ)):
            print('\n Found the Minimum!\nlambda = ', last_lambda, '--> integ = ', last_integ)
            print('lambda = ', _l, '--> integ = ', integ)
            return (_l + last_lambda) / 2

        last_integ = integ
        last_lambda = _l
        _l += 0.01