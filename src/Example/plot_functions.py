import numpy as np
import matplotlib.ticker as ticker

def plot_hh_consumption(ax, times, c0, c, c_reco, i, l):

    """

    :param times:
    :param c0: predisaster consumption level, assume c0=i0
    :param c: postdisaster consumption
    :param c_reco: reconstruction costs
    :param i: income loss
    :param l: lambda recovery rate
    :return:
    """
    xmin = -0.25
    xmax = 1.5
    fs = 10
    ymax = c0


    def format_func(value, _):
        # Convert the value into a formatted string with spacing
        return "{:,.0f}".format(value)

    # consumption
    ax.plot(times, c, color="b", label="c(t)", ls="--", lw=1.2, zorder=9)
    print(c[0], c0)
    kwargs = {"color": "b", "linestyle": "--", "linewidth": 1.2}
    ax.vlines(x=0, ymin=c[0], ymax=c0, **kwargs)
    ax.hlines(y=c0, xmin=xmin, xmax=0, **kwargs)
    # add c0
    ax.text(xmin*1.05, c0, "c$_0$", fontsize=fs, ha="right", va="center", color="k", zorder=10)

    # reconstruction cost
    ax.plot(times, c0 - c_reco, color="green", alpha=0.8, lw=1, label="c$_{reco}$(t)", zorder=2)

    # change in income
    ax.plot(times, c0 - i, color="purple", alpha=0.8, lw=1, label=r"$\Delta$i", zorder=2)
    kwargs = {"color": "purple", "linestyle": "-", "linewidth": 1, "alpha": 0.8}
    ax.vlines(x=0, ymin=c0 - i[0], ymax=c0, **kwargs)

    # recovery rate
    ax.plot([], [], " ", label=rf"$\lambda$ = {l:.1f}")

    # recovery time
    reco_time = np.log(1 / 0.05) / l
    ax.axvline(x=reco_time, color="r", alpha=0.9, lw=0.6)
    ax.text(reco_time, ymax*1.03, rf"$\tau$ = {reco_time:.2f}", fontsize=fs, ha="center", va="bottom", color="r", zorder=10)

    # formatting
    ax.yaxis.set_major_formatter(ticker.FuncFormatter(format_func))
    ax.set_xlim(xmin, xmax)
    ax.set_ylabel('Household consumption, c(t)')
    ax.set_xlabel('Time t after disaster (yrs)')
    ax.legend(loc="lower right")

    return ax
