import geopandas as gpd
import os
import tomli
from shapely.geometry import box

with open("../config.toml", mode="rb") as fp:
    config = tomli.load(fp)


# ----------------- configurations -----------------
building_type = 'residential'

# ----------------- load data -----------------

fiat = gpd.read_file(snakemake.input.fiat_shp)
azone = gpd.read_file(snakemake.input.azone_shp)
csv_out = snakemake.output.fiat_csv

# ----------------- process data -----------------

# boundaries to exclude areas where FIAT results are not available
xmin = config['bbox']['xmin']
xmax = config['bbox']['xmax']
ymin = config['bbox']['ymin']
ymax = config['bbox']['ymax']

bbox = box(xmin, ymin, xmax, ymax)
azone = gpd.clip(azone, mask=bbox)

# keep columns of interest
fiat = fiat[['PriObjType', 'PotDamStr', 'PotDamCon', 'PotDamOth', 'TD_2_RP', 'TD_5_RP', 'TD_10_RP', 'TD_20_RP',
             'TD_50_RP', 'TD_100_RP', 'EAD', 'geometry']]
fiat['centroid'] = fiat.centroid  # no warning
fiat.set_geometry('centroid', drop=True, inplace=True)

fiat = fiat[fiat['PriObjType'] == 'Residential']

# rename id
azone = azone.rename(columns={"ID": "IDazone"})

# reproject crs
crs = 'EPSG:4326'
fiat = fiat.to_crs(crs)

# spatial join
gdf = gpd.sjoin(azone, fiat, how='inner', predicate='intersects')

# fill nan values
gdf = gdf.fillna(0)

# to keep track of how many (residential buildings in each azone add a column
# avoid having two separate csv files for sum of buildings and mean of building aggregation methods
gdf['Buildings'] = 1

# aggregate at azone level
df = gdf.groupby(['IDazone'])[['PotDamStr', 'PotDamCon', 'PotDamOth',  'TD_2_RP', 'TD_5_RP', 'TD_10_RP', 'TD_20_RP',
                               'TD_50_RP', 'TD_100_RP', 'EAD',  'Buildings']].sum()

df['TotPotDam'] = df['PotDamStr'] + df['PotDamCon'] + df['PotDamOth']
df.to_csv(csv_out)
