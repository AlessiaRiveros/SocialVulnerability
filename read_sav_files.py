import pandas as pd
import os
import seaborn as sns
import matplotlib.pyplot as plt

pdir = r'p:\11209200-020-sociale-kwetsbaarheid'

pd.set_option('display.max_columns', None)

# df = pd.read_spss(os.path.join(pdir, 'Data', 'INE', 'Bases_EPF_2015-2016', 'EPF1516_GastoCorrienteAgregado.sav'))
df = pd.read_spss(os.path.join(pdir, 'Data', 'INE', 'Bases_EPF_2015-2016', 'EPF1516_Erogaciones Financieras.sav'))

"""
folio: unique hh id
area: urban or rural
dept: 07 Santa Cruz, ...
upm: unidad primaria de muestreo 
estrato: E. Bajo, E. Medio Bajo, E. Medio Alto, E. Alto
factor: relacionado con la probabilidad de seleccion que cada individuo tiene en una muestra
base: libreta o cuestionario de origen, solo hay casos C4- anual(erogaciones financieras) 
fila: numero de fila asignada segun la boleta min 1 max 18
c4_s4_01: codigo de producto/servicio (ahorro en el hogar, deposito de dinero en cuentas, caja de ahorros, ..)
c4_s4_02a: cual es el valor total al contado - valor total (en Bs) (gasto en promedio)
c4_s4_02c: numero de meses/unidad (numero de meses correspondiente al valor total)
c4_s4_02d: unidad de medida (unidad de medida declarada por el informante)
"""

# filter to area of interest dept = Santa Cruz and urban
df = df.loc[(df['area'] == 'Urbana') & (df['dept'] == '07 Santa Cruz')]
print(f'After filtering by urban area and department, there are {len(df)} rows left.')

# drop area and dept
df = df.drop(columns=['area', 'dept'])

# only one single value C4- anual(erogaciones financieras), drop this column
df['base'].unique()
df = df.drop(columns=['base'])

# df['c4_s4_02c'].unique()
# array([12., 10.,  1.,  3.,  5.,  6.,  4.,  7.,  8.,  2.,  9., 11., nan])

# df['c4_s4_02d'].unique()
# array(['Meses', '', 'VEZ', 'Unidades', 'Pagos', 'Años', 'DEUDA', 'AÑO',
#        'PRENDE', 'VECES', 'REGALO', 'BOLETO', 'Terreno', 'SERVICIO',
#        'APORTE'], dtype=object)

# How do c4_s4_02c and c4_s4_02d relate to each other?
df['c4_s4_01']

fig, ax = plt.subplots(1, figsize=(8, 10))
# sns.catplot(data=df, x="c4_s4_02c", y="c4_s4_02d", kind="bar")
sns.stripplot(data=df, x='c4_s4_02d', y='c4_s4_01', hue="c4_s4_02c")
plt.show()