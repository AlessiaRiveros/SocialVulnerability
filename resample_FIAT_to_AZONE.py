import geopandas as gpd
import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from shapely.geometry import box

pdir = r'p:\11209200-020-sociale-kwetsbaarheid'

# ----------------- configurations -----------------
# T=2 or T=10
T = '2'
# 'residential' or 'all
building_type = 'residential'

# ----------------- load data -----------------
if T == '10':
    var = '20230405155643'
elif T == '2':
    var = '20230405154342'
else:
    print('Only damages for T=2 and T=10 have been calculated')

fiat = gpd.read_file(os.path.join(pdir, 'Data', 'FIAT', f't{T}_d120_20cm_groundfloorheight_{var}_results.shp'))
azone = gpd.read_file(os.path.join(pdir, 'Data', 'Income', 'AZONE.shp'))

# ----------------- process data -----------------

# boundaries to exclude areas where FIAT results not available
xmin = -63.26
xmax = -63.05
ymin = -17.9
ymax = -17.65

bbox = box(xmin, ymin, xmax, ymax)
azone = gpd.clip(azone, mask=bbox)

# keep columns of interest
fiat = fiat[['PriObjType', 'PotDamStr', 'PotDamCon', 'PotDamOth', 'TD_E', 'ID_E', 'geometry']]
fiat['centroid'] = fiat.centroid  # no warning
fiat.set_geometry('centroid', drop=True, inplace=True)

if building_type == 'residential':
    fiat = fiat[fiat['PriObjType'] == 'Residential']
elif building_type == "all":
    fiat
else:
    print('please specify either residential or all')

# rename id
azone = azone.rename(columns={"ID": "IDazone"})

# reproject crs
crs = 'EPSG:4326'
fiat = fiat.to_crs(crs)

# spatial join
gdf = gpd.sjoin(azone, fiat, how='inner', predicate='intersects')

# fill nan values
gdf = gdf.fillna(0)

# aggregate at azone level
df = gdf.groupby(['IDazone'])[['PotDamStr', 'PotDamCon', 'PotDamOth', 'TD_E']].sum()
df['TotPotDam'] = df['PotDamStr'] + df['PotDamCon'] + df['PotDamOth']
df['RelDam'] = df['TD_E'] / df["TotPotDam"]
df.to_csv(os.path.join(pdir, f'AZONEwithT{T}{building_type}damages.csv'))

# inundation depth
df_inund = gdf.groupby(['IDazone'])['ID_E'].mean()
print(df_inund)
print(azone)
azone['ID_E'] = df['ID_E']
# ----------------- plotting -----------------
plt.figure(figsize=(7, 5))
sns.scatterplot(df_inund)
plt.ylabel('Inundation Depth')
plt.savefig(os.path.join(pdir, 'Figures', 'Exposure', f'{T}_inundation_depth.png'))

fig, ax = plt.subplots(1, figsize=(5, 5))
azone.plot(column='ID_E', ax=ax, cmap='OrRd', legend=True)

plt.show()